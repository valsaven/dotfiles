[user]
	name = Val Saven
	email = val.saven@gmail.com
	signingkey = SIGNINGKEY
[core]
	editor = vim
	pager = diff-so-fancy | less --tabs=4 -RFX
[alias]
	### List all your Aliases ###
	la = !git config -l | grep alias | cut -c 7-

	### Logs ###
	lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
	# Show the history of a file, with diffs
	fl = log -u
	# List oneline commits showing dates
	lds = log --pretty=format:%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn] --decorate --date=short
	# List commits showing changed files
	ll = log --pretty=format:%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn] --decorate --numstat
	# List commits in short form, with colors and branch/tag annotations
	ls = log --pretty=format:%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn] --decorate

	### Basic Shortcuts ###
	a = add -p # Stage your git changes in patches
	b = branch
	ba = branch -a # List both remote-tracking branches and local branches.
	bd = branch -d # Delete a branch only if it has been merged
	bD = branch -D # Force delete a branch
	c = commit # Commit you changes
	cl = clone
	co = checkout # Checkout a branch
	cob = checkout -b # Checkout a new not yet existing branch
	cp = cherry-pick
	dc = diff --cached # Display the staged changes
	diff = diff --word-diff
	f = fetch -p # Fetch from a repository and prune any remote-tracking references that no longer exist on the remote.
	fi = !git ls-files | grep -i # Finding files and content inside files (grep)
	p = push
	pl = pull
	rank = shortlog -sn --no-merges # Contributors ordered by number of merges
	s = status -s
	sb = status -sb # Status with branch

	### Reset Commands ###
	r = reset
	r1 = reset HEAD^
	r2 = reset HEAD^^
	rh = reset --hard
	rh1 = reset HEAD^ --hard
	rh2 = reset HEAD^^ --hard

	### Stash operations ###
	sa = stash apply
	sl = stash list
	ss = stash save
[pull]
	rebase = true
[commit]
	gpgsign = true
